# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    machine:
      image: ubuntu-2004:202010-01

    working_directory: ~/repo

    environment:
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}

      - run: ./gradlew build

      # Store the Gradle wrapper and dependencies in order to speed things up for next time.
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle" }}

      # store_test_results uploads the JUnit test metadata from the build/test-results/test directory
      # so that it can show up in the CircleCI dashboard. We also upload the test metadata as artifacts via the store_artifacts
      # in case there is a need to examine them.
      - store_test_results:
          path: build/test-results/test
      - store_artifacts:
          path: build/test-results/test
          when: always

      # Build and publish docker image
      - run: |
          IMAGE_NAME=chiknas/swancloudserver
          TAG=circleci-test
          docker build -t $IMAGE_NAME:$TAG .
          echo $DOCKER_PASS | docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push $IMAGE_NAME:$TAG

  build_arm_rpi:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium

    working_directory: ~/repo

    environment:
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}

      - run: ./gradlew build

      # Store the Gradle wrapper and dependencies in order to speed things up for next time.
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle" }}

      # store_test_results uploads the JUnit test metadata from the build/test-results/test directory
      # so that it can show up in the CircleCI dashboard. We also upload the test metadata as artifacts via the store_artifacts
      # in case there is a need to examine them.
      - store_test_results:
          path: build/test-results/test
      - store_artifacts:
          path: build/test-results/test
          when: always

      # Build and publish docker image using qemu to run on Raspberry pi
      - run: |
          IMAGE_NAME=$DOCKER_USER/swancloudserver
          TAG=circleci-arm-test
          docker build -t $IMAGE_NAME:$TAG -f Dockerfile.armhf .
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push $IMAGE_NAME:$TAG



workflows:
  version: 2
  workflow:
    jobs:
#      - build:
#          context: DOCKER_HUB
      - build_arm_rpi:
          context: DOCKER_HUB